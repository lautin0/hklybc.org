enum Role {
	ADMIN
	WORKER
	MEMBER
	PUBLIC
}

enum AccountStatus {
	PENDING
	ACTIVE
	INACTIVE
	SUSPENDED
	CONTACTING
}

enum Gender {
	MALE
	FEMALE
}

type User {
	username: String!
	password: String!
	role: Role!
	name: String!
	nameC: String!
	title: String
	titleC: String
	dob: Time
	gender: Gender!
	profilePicURI: String
	phone: String
	email: String
	status: AccountStatus
	creBy: String!
	creDttm: Time!
	lupdBy: String!
	lupdDttm: Time!
}

input NewUser {
	username: String!
	password: String!
	role: Role!
	name: String!
	nameC: String!
	title: String
	titleC: String
	dob: String
	gender: Gender!
	phone: String
	email: String
	status: AccountStatus
	creBy: String!	
}

input UpdateUser {
	username: String!
	role: Role!
	name: String!
	nameC: String!
	title: String
	titleC: String
	dob: Time
	gender: Gender!
	phone: String
	email: String
	status: AccountStatus	
	profilePic: Upload
}

input NewPassword {
	username: String!
	password: String!
	newPassword: String!
}

extend type Query {
	users: [User!]!
	user(username: String): User
}

extend type Mutation {
	createUser(input: NewUser!): User!
	changePassword(input: NewPassword!): Boolean
	updateUser(input: UpdateUser!): User!
}