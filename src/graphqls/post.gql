scalar Time
scalar ObjectID
scalar Upload

type Post {
	_id: ObjectID!
	parantId: ObjectID
	comments: [Post]!
	title: String
	subtitle: String
	type: PostType!
	content: String!
	username: String!
	user: User!
	creDttm: Time!
	reactions: [Reaction]!
	imageURI: String
}

input NewPost {
	parantId: String
	title: String
	subtitle: String
	type: PostType!
	content: String!
	username: String!
	toUsername: String
}

type PendingPost {
	_id: ObjectID!
	username: String!
	documentURI: String!
	postID: ObjectID
	remarks: String
	creDttm: Time!
	status: String!
	approveUsername: String
	approveDttm: Time
}

input PostFilter {
  
  AND: [PostFilter!]
  OR: [PostFilter!]

	# All values that are equal to given value.
	username: String
	# All values that are not equal to given value.
	username_not: String
	# All values that are contained in given list.
	username_in: [String!]
	# All values that are not contained in given list.
	username_not_in: [String!]
	# All values containing the given string.
	username_contains: String
	# All values not containing the given string.
	username_not_contains: String
	# All values starting with the given string.
	username_starts_with: String
	# All values not starting with the given string.
	username_not_starts_with: String
	# All values ending with the given string.
	username_ends_with: String
	# All values not ending with the given string.
	username_not_ends_with: String

	type: String

	# All values that are equal to given value.
	creDttm: Time
	# All values that are not equal to given value.
	creDttm_not: Time
	# All values that are contained in given list.
	creDttm_in: [Time!]
	# All values that are not contained in given list.
	creDttm_not_in: [Time!]
	# All values less than the given value.
	creDttm_lt: Time
	# All values less than or equal the given value.
	creDttm_lte: Time
	# All values greater than the given value.
	creDttm_gt: Time
	# All values greater than or equal the given value.
	creDttm_gte: Time
}

enum PostSort {
	title_ASC
	title_DESC
	type_ASC
	type_DESC
	creDttm_ASC
	creDttm_DESC
	reactionsCount_ASC
	reactionsCount_DESC
}

enum PostType {
	SHARING
	PREACHER
}

extend type Query {
	posts(postFilter: PostFilter, sort: PostSort): [Post!]!
	post(oid: String!): Post
}

extend type Mutation {
	createPost(input: NewPost!, image: Upload): Post!
}